#!/bin/sh

BASEURL="https://api.cloudflare.com/client/v4"

## CONFIG END

source $(dirname "$0")/ddns.config # imports ZONE_ID, ZONE_OID, DOMAIN_NAME, AUTH_EMAIL, AUTH_KEY, EXPECTED_INTERFACE

# $IFACE comes from networkd-dispatcher
if [ ! -z "$EXPECTED_INTERFACE" ] && [ ! -z "$IFACE" ]; then
    if [ "$IFACE" != "$EXPECTED_INTERFACE" ]; then
        echo "DDNS script does not apply for this interface! Exiting without errors"
        exit 0
    fi
fi

function updateCloudflare {
    curl -X PUT "${BASEURL}/zones/${ZONE_ID}/dns_records/${ZONE_OID}" \
        -H "X-Auth-Email: ${AUTH_EMAIL}" \
        -H "X-Auth-Key: ${AUTH_KEY}" \
        -H "Content-Type: application/json" \
        --data "${JSONDATA}" 2>/dev/null
}

# Variable initialization
rv=0

# Config check
if [ -z "${ZONE_ID}" ]; then
    echo no zone id
    rv=1
elif [ -z "${ZONE_OID}" ]; then
    echo no zone oid
    rv=1
elif [ -z "${DOMAIN_NAME}" ]; then
    echo no domain name
    rv=1
elif [ -z "${AUTH_EMAIL}" ]; then
    echo no auth email
    rv=1
elif [ -z "${AUTH_KEY}" ]; then
    echo no auth key
    rv=1
fi

# Construct JSON for sending to CloudFlare
JSONDATA='{"type":"A","name":"'
JSONDATA="${JSONDATA}${DOMAIN_NAME}"
JSONDATA="${JSONDATA}\",\"content\":\""
JSONDATA="${JSONDATA}${ADDR}" # $ADDR comes from networkd-dispatcher
JSONDATA="${JSONDATA}\"}"

# Tell CloudFlare about our IP
if [ "$rv" == 0 ]; then
    OUTPUT="$(updateCloudflare)"
    if [ "$?" == 0 ]; then
        echo "$OUTPUT" | grep -E '"success":.?true'
        rv="$?"
    else
        rv=1
    fi
fi

exit "$rv"
